name: Backend CI/CD

on:
    push:
        branches: ['**']
    pull_request:
        branches: [main]

env:
  BASE_URL: http://localhost
  PORT: 3000
  NODE_ENV: development
  DEFAULT_VERSION: 1
  HENRIK_DEV_API_KEY: 'HDEV-asd590f0-asdf-asdf-asdf-0asdf0asdf'
  SUPABASE_URL: 'https://abcdefgh.supabase.co'
  SUPABASE_KEY: 'asdf0asdf-asdf-asdf-asdf-0asdf0asdf'

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 23

            - name: Cache node modules
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Generate API clients
              run: npm run generate-api-client

            - name: Cache generated API clients
              uses: actions/cache@v4
              with:
                  path: generated/openapi/api-client
                  key: ${{ runner.os }}-generated-api-client-${{ hashFiles('**/generated/openapi/swagger.yaml') }}

            - name: Lint code
              run: npm run lint

            - name: Check code formatting
              run: npm run format

    test:
        needs: lint
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 23

            - name: Cache node modules
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Restore generated API clients
              uses: actions/cache@v4
              with:
                  path: generated/openapi/api-client
                  key: ${{ runner.os }}-generated-api-client-${{ hashFiles('**/generated/openapi/swagger.yaml') }}

            - name: Test code
              run: npm run test:cov

    build:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 23

            - name: Cache node modules
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci
            
            - name: Restore generated API clients
              uses: actions/cache@v4
              with:
                  path: generated/openapi/api-client
                  key: ${{ runner.os }}-generated-api-client-${{ hashFiles('**/generated/openapi/swagger.yaml') }}

            - name: Login to Supabase
              run: npx supabase --token ${{ secrets.SUPABASE_ACCESS_TOKEN }} login 
              
            - name: Generate Supabase types
              run: npm run generate-supabase-types

            - name: Upload generated files
              uses: actions/upload-artifact@v4
              with:
                  name: generated
                  path: generated
                  overwrite: true

            - name: Build code
              run: npm run build

    upload:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download generated files
              uses: actions/download-artifact@v4
              with:
                  name: generated
                  path: generated

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: List downloaded files
              run: ls -laR generated

            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/vg-backend:latest
